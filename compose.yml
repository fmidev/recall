version: '3.8'
services:
  db:
    build: ./db
    image: prevent_db:latest
    environment:
      POSTGRES_MULTIPLE_DATABASES: terracotta,preventdb
      POSTGRES_USER: postgres
      POSTGRES_DB: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./db/create-multiple-postgresql-databases.sh:/docker-entrypoint-initdb.d/multibase.sh:Z
    ports:
      - "5432:5432"
  redis:
    image: "redis:alpine"
    ports:
      - "6379:6379"
  terracotta:
    build: ./terracotta
    image: terracotta:latest
    environment:
      TC_DRIVER_PATH: postgresql://postgres:postgres@db:5432/terracotta
      TC_RASTER_CACHE_SIZE: 1027604480
      TC_PORT: 8088
      TC_DEFAULT_TILE_SIZE: [512, 512]
      TC_EXTRA_CMAP_FOLDER: /tmp/prevent/colormaps
      AWS_NO_SIGN_REQUEST: YES
    volumes:
      - /tmp/prevent:/tmp/prevent:z
    ports:
      - "8088:8088"
    depends_on:
      - db
  celery_worker:
    build:
      context: .
      dockerfile: Dockerfile
    image: prevent:latest
    command: celery -A prevent.dapp.celery_app worker --loglevel=info
    environment:
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/1
      PREVENT_DB_URI: postgresql://postgres:postgres@db:5432/preventdb
      TC_DB_URI: postgresql://postgres:postgres@db:5432/terracotta
      TC_EXTRA_CMAP_FOLDER: /tmp/prevent/colormaps
    volumes:
      - /tmp/prevent:/tmp/prevent:z
    depends_on:
      - db
      - redis
      - terracotta
  web:
    build:
      context: .
      dockerfile: Dockerfile
    image: prevent:latest
    ports:
      - "8050:8050"
    environment:
      PYTHONUNBUFFERED: 1
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/1
      PREVENT_DB_URI: postgresql://postgres:postgres@db:5432/preventdb
      TC_DB_URI: postgresql://postgres:postgres@db:5432/terracotta
      TC_URL: http://localhost:8088
      TC_EXTRA_CMAP_FOLDER: /tmp/prevent/colormaps
    volumes:
      - /tmp/prevent:/tmp/prevent:z
    depends_on:
      - db
      - redis
      - celery_worker
      - terracotta
volumes:
  db_data: